<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
			http://www.springframework.org/schema/data/jpa
   			http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd
   			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <jpa:repositories base-package="com.viettel.bccs.inventory" entity-manager-factory-ref="entityManagerFactoryInventory"/>

    <jpa:repositories base-package="com.viettel.bccs.partner, com.viettel.bccs.im1" entity-manager-factory-ref="entityManagerFactoryImLib"/>

    <bean id="dataSourceInventory" parent="xaDatasourceBase">
        <property name="uniqueResourceName" value="XA_IM"/>
        <property name="xaProperties">
            <props>
                <prop key="user">${inventory.jdbc.username}</prop>
                <prop key="password">${inventory.jdbc.password}</prop>
                <prop key="URL">${inventory.jdbc.url}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="0"/>
        <property name="maxPoolSize" value="300"/>
    </bean>

    <bean id="entityManagerFactoryInventory" parent="emfBase">
        <property name="persistenceXmlLocation" value="classpath:persistence.xml" />
        <property name="persistenceUnitName" value="BCCS_IM"/>
        <!--Tam thoi de la BCCS_SALE de chay sau phai doi lai thanh BCCS_IM-->
        <property name="dataSource" ref="proxyDataSourceInventory"/>
    </bean>


    <bean id="proxyDataSourceInventory" class="net.ttddyy.dsproxy.support.ProxyDataSource">
        <property name="dataSource" ref="dataSourceInventory"/>
        <property name="listener" ref="listeners"/>
    </bean>

    <bean id="dataSourceImLib" parent="xaDatasourceBase">
        <property name="uniqueResourceName" value="XA_IM_LIB"/>
        <property name="xaProperties">
            <props>
                <prop key="user">${imlib.jdbc.username}</prop>
                <prop key="password">${imlib.jdbc.password}</prop>
                <prop key="URL">${imlib.jdbc.url}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="0"/>
        <property name="maxPoolSize" value="300"/>
    </bean>

    <bean id="entityManagerFactoryImLib" parent="emfBase">
        <property name="persistenceXmlLocation" value="classpath:persistence.xml"/>
        <property name="persistenceUnitName" value="BCCS_IM_LIB"/>
        <property name="dataSource" ref="proxyDataSourceIm"/>
    </bean>

    <bean id="proxyDataSourceIm" class="net.ttddyy.dsproxy.support.ProxyDataSource">
        <property name="dataSource" ref="dataSourceImLib"/>
        <property name="listener" ref="listeners"/>
    </bean>

    <bean id="listeners" class="net.ttddyy.dsproxy.listener.ChainListener">
        <property name="listeners">
            <list>
                <!--<bean class="net.ttddyy.dsproxy.listener.CommonsQueryLoggingListener">-->
                <bean class="net.ttddyy.dsproxy.listener.CommonsQueryLoggingListener">
                    <property name="logLevel" value="INFO"/>
                    <property name="writeAsJson" value="true"/>
                    <property name="writeDataSourceName" value="true"/>
                    <!-- Default is DEBUG -->
                </bean>
                <bean class="net.ttddyy.dsproxy.listener.DataSourceQueryCountListener"/>
            </list>
        </property>
    </bean>

    <bean id="xaDatasourceBase" class="com.atomikos.jdbc.AtomikosDataSourceBean"
          abstract="true"
          init-method="init"
          destroy-method="close">
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource"/>
        <property name="minPoolSize" value="0"/>
        <property name="maxPoolSize" value="300"/>
        <!--<property name="testQuery" value="select 1 from dual"/>-->
    </bean>

    <bean id="emfBase" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" abstract="true">
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>


        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">
                    <!--org.hibernate.dialect.Oracle10gDialect-->
                    com.viettel.fw.hibernate.CbsOracleDialect
                </prop>

                <!-- BEGIN Atomikos -->
                <prop key="hibernate.transaction.factory_class">
                    org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory
                </prop>
                <prop key="hibernate.transaction.jta.platform">com.atomikos.icatch.jta.hibernate4.AtomikosPlatform
                </prop>

                <!-- END Atomikos -->

                <prop key="javax.persistence.transactionType">jta</prop>
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
                <prop key="hibernate.show_sql">false</prop>
            </props>
        </property>
    </bean>

    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
          init-method="init"
          destroy-method="close">
        <property name="forceShutdown" value="false"/>
        <property name="transactionTimeout" value="180000"/>
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.J2eeUserTransaction">
        <!--<property name="transactionTimeout" value="180000"/>-->
    </bean>

    <!--  Configure the Spring framework to use JTA transactions from Atomikos-->
    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"
          depends-on="atomikosTransactionManager,atomikosUserTransaction">
        <property name="transactionManager" ref="atomikosTransactionManager"/>
        <property name="userTransaction" ref="atomikosUserTransaction"/>
        <property name="allowCustomIsolationLevels" value="true"/>
    </bean>

    <!--

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
        </tx:attributes>
    </tx:advice>

    <aop:config expose-proxy="true" proxy-target-class="true">
        <aop:pointcut id="txPointcut" expression="execution(* com.viettel.bccs.sale.service.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
    </aop:config>
    -->

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--<tx:annotation-driven transaction-manager="transactionManager" modex="aspectj"/>    -->

    <!--<tx:jta-transaction-manager/>-->

</beans>